var GameMaster=function(n){this.gameRiddles=[],this.huntId=n.HuntId,this.huntKey="hunt"+n.HuntId+"user"+n.UserId,this.userId=n.UserId,this.started=Date.now(),this.duration=n.TimeLimit*60,this.endGameRiddle={riddle:{LocationName:n.EndLocation,Latitude:n.EndLatitude,Longitude:n.EndLongitude},isUnlocked:!1,isSuspicious:!1,hasQuestions:!1},this.load(),this.gameRiddles.length===0&&(this.create(n.Riddles),this.save())};GameMaster.prototype.create=function(n){var t=[];n.forEach(function(n){var i=[];n.Questions.forEach(function(n){i.push({question:n,isAnswered:!1,isCorrect:!1})}),t.push({riddle:n,gameQuestions:i,isSolved:!1,hasQuestions:!1,isCorrect:!1,isSuspicious:!1,isCompleted:!1})}),this.gameRiddles=t},GameMaster.prototype.load=function(){var n=JSON.parse(localStorage.getItem(this.huntKey));n?(this.gameRiddles=n.gameRiddles||[],this.started=n.started||Date.now()):(this.gameRiddles=[],this.started=Date.now())},GameMaster.prototype.save=function(){var n={started:this.started,gameRiddles:this.gameRiddles};localStorage.setItem(this.huntKey,JSON.stringify(n))},GameMaster.prototype.finish=function(n){var t=(Date.now()-this.started)/1e3|0,i={UserId:this.userId,HuntId:this.huntId,Score:this.score(),TimeInSeconds:t};$.post("/game/savescore",i,n,"json"),localStorage.removeItem(this.huntKey)},GameMaster.prototype.score=function(){var n=0;return this.gameRiddles.forEach(function(t){t.isCorrect&&(n+=t.isSuspicious?2:3,n+=t.gameQuestions.filter(function(n){return n.isCorrect}).length)}),this.endGameRiddle.isSuspicious||(n+=3),n};var GoogleMap=React.createClass({displayName:"GoogleMap",initMap:function(){var r={zoom:16,center:new google.maps.LatLng(this.props.lat,this.props.lng)},i=new google.maps.Map(React.findDOMNode(this.refs.map),r),n=new google.maps.LatLng(this.props.lat,this.props.lng),u=new google.maps.Marker({position:n,map:i}),t;this.props.positions&&(t=new google.maps.LatLngBounds,t.extend(n),this.props.positions.forEach(function(r){n=new google.maps.LatLng(r.lat,r.lng);var u=new google.maps.Marker({position:n,map:i,title:r.name});t.extend(n)}),i.fitBounds(t))},componentDidMount:function(){this.initMap()},render:function(){return React.createElement("div",{className:"map-holder",ref:"map"})}}),TrueOrFalseGuesser=React.createClass({displayName:"TrueOrFalseGuesser",handleGuess:function(n){var t=this.props.answer.toUpperCase()===n.toUpperCase();this.props.onHasAnswered(t)},render:function(){return React.createElement("div",null,React.createElement("button",{className:"btn btn-green",onClick:this.handleGuess.bind(null,"true")},"Sant")," eller ",React.createElement("button",{className:"btn btn-red",onClick:this.handleGuess.bind(null,"false")},"Falskt"))}}),TextGuessingResult=React.createClass({displayName:"TextGuessingResult",render:function(){var n,t,i;return this.props.wrongGuesses.length>0&&(t=this.props.maxwrong-this.props.wrongGuesses.length,i=this.props.wrongGuesses.map(function(n,t){return React.createElement("div",{key:t,className:"tile tile-red"},React.createElement("div",{className:"tile-inner"},n))}),n=React.createElement("div",{className:"tile-wrap"},i,React.createElement("div",{className:"tile"},React.createElement("div",{className:"tile-inner"},"Du kan gissa fel ",React.createElement("strong",null,t)," ggr till")))),React.createElement("div",null,React.createElement("label",{style:{letterSpacing:"5px",fontSize:"1.5em"}},this.props.guessword),n)}}),TextGuessingForm=React.createClass({displayName:"TextGuessingForm",handleSubmit:function(n){n.preventDefault();var t=this.refs.guess.getDOMNode(),i=t.value.trim();this.props.onGuess(i);t.value=""},componentDidUpdate:function(){$(".txt-guess").focus()},render:function(){return React.createElement("form",{onSubmit:this.handleSubmit,className:"form"},React.createElement("div",{className:"form-group"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-12"},React.createElement("label",null,"Skriv in hela ordet/meningen eller gissa på en bokstav/siffra i taget"),React.createElement("input",{type:"text",className:"txt-guess form-control form-control-default input-inline",placeholder:"Gissning",ref:"guess"}),React.createElement("input",{type:"submit",className:"btn btn-blue btn-inline",value:"Gissa"})))))}}),TextGuesser=React.createClass({displayName:"TextGuesser",endGuessing:function(n){this.props.onHasAnswered(n)},handleGuess:function(n){var i;n=n.toUpperCase();var r=this.state.wrongGuesses,u=this.state.guessword,t=this.props.answer;if(n.length>1){if(n===t)return this.endGuessing(!0),!1;r.push(n)}else{var f=u.split(""),o=t.split(""),e=!1;for(i=0;i<t.length;i++)t[i]===n&&(f[i]=n,e=!0);e||r.push(n),u=f.join("")}if(u===t)return this.endGuessing(!0),!1;if(r.length>=this.props.maxwrong)return this.endGuessing(!1),!1;this.setState({wrongGuesses:r,guessword:u})},initGuessWord:function(n){for(var i=n.split(""),r="",t=0;t<i.length;t++)r+=i[t]===" "?" ":"_";return r},componentWillReceiveProps:function(n){this.setState({guessword:this.initGuessWord(n.answer),wrongGuesses:[]})},getInitialState:function(){return{guessword:this.initGuessWord(this.props.answer),wrongGuesses:[]}},render:function(){return React.createElement("div",null,React.createElement(TextGuessingResult,{guessword:this.state.guessword,wrongGuesses:this.state.wrongGuesses,maxwrong:this.props.maxwrong}),React.createElement(TextGuessingForm,{onGuess:this.handleGuess}))}}),NumberGuesser=React.createClass({displayName:"NumberGuesser",handleSubmit:function(n){n.preventDefault();var t=this.refs.number.getDOMNode(),i=t.value.trim(),r=parseInt(this.props.answer,10)===parseInt(i,10);this.props.onHasAnswered(r)},render:function(){return React.createElement("form",{onSubmit:this.handleSubmit,className:"form"},React.createElement("div",{className:"form-group"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-6 col-md-8 col-sm-10"},React.createElement("label",null,"Skriv in ett nummer som svar"),React.createElement("input",{className:"form-control form-control-default",type:"number",ref:"number"})))),React.createElement("div",{className:"form-group-btn"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-6 col-md-8 col-sm-10"},React.createElement("button",{className:"btn btn-blue waves-button waves-light waves-effect",type:"submit"},"Spara")))))}}),MultiGuesser=React.createClass({displayName:"MultiGuesser",handleGuess:function(){var n=!1,r=this.props.answer.indexOf(",")!==-1,t,i;r?(t=this.props.answer.split(",").map(function(n){return n.toUpperCase().trim()}),i=0,$(".answer-option:checked").each(function(){var r=t.indexOf($(this).val());r!==-1&&i++,n=t.length===i})):n=$(".answer-option:checked").val()===this.props.answer;this.props.onHasAnswered(n)},render:function(){var n=this.props.options.split(",").map(function(n){return n.toUpperCase().trim()}),t=this.props.answer.indexOf(",")!==-1,i;return t?this.props.answer.split(",").map(function(t){n.push(t.toUpperCase().trim())}):n.push(this.props.answer.toUpperCase()),n=n.sort(function(){return.5-Math.random()}),i=n.map(function(n){return t?React.createElement("div",{className:"checkbox checkbox-adv"},React.createElement("label",null,React.createElement("input",{className:"access-hide answer-option",name:"AnswerOption",type:"checkbox",value:n}),n,React.createElement("span",{className:"circle"}),React.createElement("span",{className:"circle-check"}),React.createElement("span",{className:"circle-icon icon icon-done"}))):React.createElement("div",{className:"radio radio-adv"},React.createElement("label",null,React.createElement("input",{className:"access-hide answer-option",name:"AnswerOption",value:n,type:"radio"}),n,React.createElement("span",{className:"circle"}),React.createElement("span",{className:"circle-check"})))}.bind(this)),React.createElement("div",null,React.createElement("div",{className:"form-group"},i),React.createElement("button",{className:"btn btn-blue",onClick:this.handleGuess},"Svara"))}}),LocationChecker=React.createClass({displayName:"LocationChecker",unlock:function(n){var t=this.state.gameRiddle;t.hasQuestions=!0,this.setState({isUnlocked:!0,isSuspicious:n})},handleReturn:function(){this.props.onReturn()},handleForceUnlock:function(){this.unlock(!0)},handlePosition:function(n){$.post("/game/CalculateDistance",{sLatitude:n.coords.latitude,sLongitude:n.coords.longitude,eLatitude:this.state.lat,eLongitude:this.state.lng},function(n){n=Math.round(n),n<=50?this.unlock(!1):this.setState({distance:n,showAlternative:!0})}.bind(this),"json")},handleError:function(){this.setState({showAlternative:!0})},handleCheckLocation:function(){navigator.geolocation?navigator.geolocation.getCurrentPosition(this.handlePosition):this.setState({showAlternative:!0})},componentWillReceiveProps:function(n){var t=n.gameRiddle.riddle,i=t.LocationName,r=t.Latitude,u=t.Longitude;this.setState({gameRiddle:n.gameRiddle,lat:r,lng:u,location:i})},getInitialState:function(){var n=this.props.gameRiddle.riddle,t=n.LocationName,i=n.Latitude,r=n.Longitude;return{gameRiddle:this.props.gameRiddle,lat:i,lng:r,location:t}},render:function(){var n,t,i;return this.state.distance&&(i=React.createElement("p",null,"Du befinner dig just nu ca ",this.state.distance," m därifrån")),this.state.showAlternative&&(n=React.createElement("p",null,React.createElement("button",{className:"btn btn-red",onClick:this.handleForceUnlock},"Jag svär jag är där!"))),this.state.isSuspicious&&(t=React.createElement("img",{src:"/images/suspicious.jpg",alt:"Suspicious"})),React.createElement("div",null,React.createElement("h2",{className:"content-sub-heading"},"Bege dig till ",this.state.location),this.state.isUnlocked?React.createElement("div",null,t,React.createElement("p",null,"Platsen är upplåst!")):React.createElement("div",null,React.createElement("p",null,"Du måste befinna dig inom 50 m från platsen."),i,React.createElement("button",{className:"btn btn-blue",onClick:this.handleCheckLocation},"Jag är där"),n),React.createElement("p",null,React.createElement("a",{href:"#",onClick:this.handleReturn},"Tillbaka")),React.createElement(GoogleMap,{lat:this.state.lat,lng:this.state.lng}))}}),RiddleEndGame=React.createClass({displayName:"RiddleEndGame",completedGuessing:function(){this.props.onSolved(this.props.isWinner)},render:function(){return React.createElement("div",null,this.props.isWinner?React.createElement("div",null,React.createElement("h2",{className:"content-sub-heading"},"Bra där du gissade rätt"),React.createElement("p",null,"Bege dig till ",React.createElement("strong",null,this.props.riddle.LocationName)," för att hämta rebusens frågor."),React.createElement("a",{href:"#",onClick:this.completedGuessing},"Återgå till rebuslistan"),React.createElement(GoogleMap,{lat:this.props.riddle.Latitude,lng:this.props.riddle.Longitude})):React.createElement("div",null,React.createElement("h2",{className:"content-sub-heading"},"Fel fel fel!"),React.createElement("p",{dangerouslySetInnerHTML:{__html:emojione.toImage(":worried:")}}),React.createElement("a",{href:"#",onClick:this.completedGuessing},"Återgå till rebuslistan")))}}),RiddleGuesser=React.createClass({displayName:"RiddleGuesser",handleHasAnswered:function(n){this.setState({isOver:!0,isWinner:n})},handleGuess:function(n){var f,e,i;n=n.toUpperCase(),f=this.state.guesscount,f++,e=this.state.guesses,e.push(n);var r=this.state.guessword,t=this.state.riddle.Answer,u=this.state.wrongcount;if(n.length>1){if(n===t)return this.endGuessing(!0),!1;u++}else{var o=r.split(""),h=t.split(""),s=!1;for(i=0;i<t.length;i++)t[i]===n&&(o[i]=n,s=!0);s||u++,r=o.join("")}if(r===t)return this.endGuessing(!0),!1;if(u>=this.props.maxwrong)return this.endGuessing(!1),!1;this.setState({guesscount:f,wrongcount:u,guessword:r,guesses:e,isOver:!1})},handleSolved:function(n){var t=this.state.gameRiddle;t.isSolved=!0,t.isCorrect=n,n||(t.isCompleted=!0);this.props.onSolved(t)},handleReturn:function(){this.props.onReturn()},componentWillReceiveProps:function(n){var t=n.gameRiddle.riddle;this.setState({gameRiddle:n.gameRiddle,riddle:t,isOver:!1})},getInitialState:function(){var n=this.props.gameRiddle.riddle;return{gameRiddle:this.props.gameRiddle,riddle:n,isOver:!1}},render:function(){return React.createElement("div",null,this.state.isOver?React.createElement(RiddleEndGame,{isWinner:this.state.isWinner,riddle:this.state.riddle,onSolved:this.handleSolved}):React.createElement("div",null,React.createElement("h2",{className:"content-sub-heading"},"Lös rebus"),React.createElement("p",{dangerouslySetInnerHTML:{__html:emojione.toImage(this.state.riddle.Description)}}),React.createElement(TextGuesser,{answer:this.state.riddle.Answer,maxwrong:this.props.maxwrong,onHasAnswered:this.handleHasAnswered}),React.createElement("p",null,React.createElement("a",{href:"#",onClick:this.handleReturn},"Återgå till rebuslistan"))))}}),GameQuestion=React.createClass({displayName:"GameQuestion",handleHasAnswered:function(n){var t=this.props.data;t.isAnswered=!0,t.isCorrect=n;this.props.onHasAnswered(t)},render:function(){var n=this.props.data.question.Answer,t={text:React.createElement(TextGuesser,{answer:n,maxwrong:3,onHasAnswered:this.handleHasAnswered}),number:React.createElement(NumberGuesser,{answer:n,onHasAnswered:this.handleHasAnswered}),multi:React.createElement(MultiGuesser,{answer:n,options:this.props.data.question.AnswerOptions,onHasAnswered:this.handleHasAnswered,s:!0}),trueorfalse:React.createElement(TrueOrFalseGuesser,{answer:n,onHasAnswered:this.handleHasAnswered})};return React.createElement("div",null,React.createElement("h2",{className:"content-sub-heading"},this.props.data.question.Name),React.createElement("p",null,this.props.data.question.Description),t[this.props.data.question.AnswerType])}}),QuestionGuesser=React.createClass({displayName:"QuestionGuesser",componentWillReceiveProps:function(n){var t=n.gameRiddle.gameQuestions;this.setState({gameQuestions:t,riddle:n.gameRiddle.riddle,showQuestion:!1})},getInitialState:function(){var n=this.props.gameRiddle.gameQuestions;return{gameQuestions:n,riddle:this.props.gameRiddle.riddle,showQuestion:!1}},handleReturn:function(){var n=this.state.gameQuestions.every(function(n){return n.isAnswered});if(n)this.props.onCompleted(this.props.gameRiddle);else this.props.onReturn()},handleOpenQuestion:function(n,t){t.preventDefault(),this.setState({gameQuestion:n,showQuestion:!0})},handleHasAnswered:function(){this.setState({showQuestion:!1})},render:function(){var n,t,i,u=this.state.gameQuestions.every(function(n){return n.isAnswered}),r;return u&&(i=React.createElement("div",null,React.createElement("p",null,"Bra gjort ",React.createElement("span",{dangerouslySetInnerHTML:{__html:emojione.toImage(":thumbsup:")}})),React.createElement("p",null," Alla frågor besvarade. Du kan återgå till rebuslistan."))),this.state.showQuestion?t=React.createElement(GameQuestion,{data:this.state.gameQuestion,onHasAnswered:this.handleHasAnswered}):(r=this.state.gameQuestions.map(function(n){var t,i="card";return n.isAnswered?i+=n.isCorrect?" card-green-bg":" card-red-bg":t=React.createElement("a",{href:"#",onClick:this.handleOpenQuestion.bind(this,n)},React.createElement("span",{className:"text-blue"},"Svara")),React.createElement("div",{className:"col-lg-3 col-md-4 col-sm-6"},React.createElement("div",{className:i},React.createElement("div",{className:"card-main"},React.createElement("div",{className:"card-inner"},React.createElement("p",null,n.question.Description)),React.createElement("div",{className:"card-action"},React.createElement("ul",{className:"nav nav-list pull-left"},React.createElement("li",null,t))))))}.bind(this)),n=React.createElement("div",null,React.createElement("h2",{className:"content-sub-heading"},"Frågor till rebus ",this.state.riddle.Name),React.createElement("div",{className:"card-wrap"},React.createElement("div",{className:"row"},r)),React.createElement("p",null,React.createElement("a",{href:"#",onClick:this.handleReturn},"Återgå till rebuslistan")))),React.createElement("div",null,React.createElement("div",null,i,t,n))}}),CountDownTimer=React.createClass({displayName:"CountDownTimer",timer:function(){var i=this.props.duration-((Date.now()-this.props.started)/1e3|0),n=i/60|0,t=i%60|0;n<=0&&t<=0?(window.clearInterval(this.interval),this.props.onTimeIsUp()):(n=n<10?"0"+n:n,t=t<10?"0"+t:t,this.setState({minutes:n,seconds:t}))},getInitialState:function(){return{minutes:0,seconds:0}},componentDidMount:function(){this.timer(),this.interval=setInterval(this.timer,1e3)},componentWillUnmount:function(){window.clearInterval(this.interval)},render:function(){return React.createElement("span",null,React.createElement("span",{dangerouslySetInnerHTML:{__html:emojione.toImage(":hourglass:")}})," ",this.state.minutes,":",this.state.seconds)}}),CorrectAnswer=React.createClass({displayName:"CorrectAnswer",render:function(){var n=this.props.gameQuestion.isCorrect?"rätt":"fel";return React.createElement("div",{className:"tile"},React.createElement("div",{className:"tile-inner"},React.createElement("p",null,React.createElement("strong",null,"Fråga:")," ",this.props.gameQuestion.question.Description,React.createElement("br",null),React.createElement("strong",null,"Svar:")," ",this.props.gameQuestion.question.Answer," ",React.createElement("br",null),React.createElement("small",null,"Du svarade ",n))))}}),CorrectRiddle=React.createClass({displayName:"CorrectRiddle",render:function(){var n=this.props.gameRiddle.gameQuestions.map(function(n,t){return React.createElement(CorrectAnswer,{gameQuestion:n,key:t})}),t=this.props.gameRiddle.isCorrect?"rätt":"fel";return React.createElement("div",{className:"col-lg-3 col-md-4 col-sm-6"},React.createElement("div",{className:"card"},React.createElement("div",{className:"card-main"},React.createElement("div",{className:"card-inner"},React.createElement("p",{dangerouslySetInnerHTML:{__html:emojione.toImage(this.props.gameRiddle.riddle.Description)}}),React.createElement("p",null,React.createElement("strong",null,"Svar:")," ",this.props.gameRiddle.riddle.Answer,React.createElement("br",null),React.createElement("small",null,"Du svarade ",t)),React.createElement("div",{className:"tile-wrap"},n)))))}}),CorrectHunt=React.createClass({displayName:"CorrectHunt",render:function(){var n=this.props.gameRiddles.map(function(n,t){return React.createElement(CorrectRiddle,{gameRiddle:n,key:t})});return React.createElement("div",{className:"card-wrap"},React.createElement("div",{className:"row"},n))}}),ReviewForm=React.createClass({displayName:"ReviewForm",handleSubmit:function(n){n.preventDefault(),console.log("skickar omdöme")},handleVote:function(n,t){t.preventDefault(),this.setState({isUpVote:n})},getInitialState:function(){return{isUpVote:!0}},render:function(){var n=this.state.isUpVote?"Toppen!":"Botten!",t=this.state.isUpVote?{fontSize:"1.5em"}:{},i=this.state.isUpVote?{}:{fontSize:"1.5em"};return React.createElement("div",null,React.createElement("h2",{className:"content-sub-heading"},"Vad tyckte du?"),React.createElement("form",{onSubmit:this.handleSubmit},React.createElement("p",null,n),React.createElement("a",{href:"#",style:t,onClick:this.handleVote.bind(null,!0)},React.createElement("span",{dangerouslySetInnerHTML:{__html:emojione.toImage(":thumbsup:")}})),"   ",React.createElement("a",{href:"#",style:i,onClick:this.handleVote.bind(null,!1)},React.createElement("span",{dangerouslySetInnerHTML:{__html:emojione.toImage(":thumbsdown:")}})),React.createElement("div",{className:"form-group"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-6 col-md-8 col-sm-10"},React.createElement("label",null,"Kommentar"),React.createElement("textarea",{id:"Description",rows:"3",cols:"30",className:"form-control form-control-default",name:"Description",ref:"descripton"})))),React.createElement("div",{className:"form-group-btn"},React.createElement("div",{className:"row"},React.createElement("div",{className:"col-lg-6 col-md-8 col-sm-10"},React.createElement("button",{className:"btn btn-blue waves-button waves-light waves-effect",type:"submit"},"Skicka"))))))}}),GameRiddle=React.createClass({displayName:"GameRiddle",handleOpenRiddle:function(n){n.preventDefault();this.props.onRiddleOpen(this.props.gameRiddle)},handleAnswerQuestions:function(n){n.preventDefault();this.props.onAnswerQuestions(this.props.gameRiddle)},handleCollectQuestions:function(n){n.preventDefault();this.props.onCollectQuestions(this.props.gameRiddle)},render:function(){var t,i,n=this.props.gameRiddle,r="card",u;return n.isSolved?n.isCompleted&&n.isCorrect?r+=" card-green-bg":n.isCorrect?n.hasQuestions?(u=n.gameQuestions.filter(function(n){return!n.isAnswered}).length,i=React.createElement("p",null,React.createElement("strong",null,u," st obesvarade frågor")),t=React.createElement("a",{href:"#",onClick:this.handleAnswerQuestions},React.createElement("span",{className:"text-blue"},"Svara på frågor"))):(i=React.createElement("p",null,React.createElement("span",{className:"icon icon-place alt-text"})," Frågorna finns vid ",n.riddle.LocationName),t=React.createElement("a",{href:"#",onClick:this.handleCollectQuestions},React.createElement("span",{className:"text-blue"},"Hämta frågor"))):r+=" card-red-bg":t=React.createElement("a",{href:"#",onClick:this.handleOpenRiddle},React.createElement("span",{className:"text-blue"},"Lös rebus")),React.createElement("div",{className:"col-lg-3 col-md-4 col-sm-6"},React.createElement("div",{className:r},React.createElement("div",{className:"card-main"},React.createElement("div",{className:"card-inner"},React.createElement("p",{dangerouslySetInnerHTML:{__html:emojione.toImage(n.riddle.Description)}}),i),React.createElement("div",{className:"card-action"},React.createElement("ul",{className:"nav nav-list pull-left"},React.createElement("li",null,t))))))}}),GameRiddleList=React.createClass({displayName:"GameRiddleList",handleCollectQuestions:function(n){this.props.onCollectQuestions(n)},handleAnswerQuestions:function(n){this.props.onAnswerQuestions(n)},handleRiddleOpen:function(n){this.props.onRiddleOpen(n)},render:function(){var n=this.props.data.map(function(n,t){return React.createElement(GameRiddle,{key:t,gameRiddle:n,onRiddleOpen:this.handleRiddleOpen,onCollectQuestions:this.handleCollectQuestions,onAnswerQuestions:this.handleAnswerQuestions})}.bind(this));return React.createElement("div",{className:"card-wrap"},React.createElement("div",{className:"row"},n))}}),GameApp=React.createClass({displayName:"GameApp",save:function(){this.state.master.save()},showContentContainer:function(){$("#game-container").hide(),$("#content-container").show()},hideContentContainer:function(){$("#game-container").show(),$("#content-container").hide()},handleRiddleSolved:function(){this.save(),this.hideContentContainer();var n=this.state.data;this.setState({data:n})},handleReturn:function(){this.save(),this.hideContentContainer();var n=this.state.data;this.setState({data:n})},handleRiddleOpen:function(n){this.showContentContainer(),React.render(React.createElement(RiddleGuesser,{gameRiddle:n,maxwrong:3,onReturn:this.handleReturn,onSolved:this.handleRiddleSolved}),document.getElementById("content-container"))},handleCollectQuestions:function(n){this.showContentContainer(),React.render(React.createElement(LocationChecker,{gameRiddle:n,onReturn:this.handleReturn}),document.getElementById("content-container"))},handleAnswerQuestions:function(n){this.showContentContainer(),React.render(React.createElement(QuestionGuesser,{gameRiddle:n,onReturn:this.handleReturn,onCompleted:this.handleQuestionsCompleted}),document.getElementById("content-container"))},handleQuestionsCompleted:function(n){this.hideContentContainer(),n.isCompleted=!0,this.save();var t=this.state.data;this.setState({data:t})},handleShowMap:function(){this.showContentContainer();var n=this.state.data.filter(function(n){return n.isCorrect}).map(function(n){return{lat:n.riddle.Latitude,lng:n.riddle.Longitude,name:n.riddle.LocationName}}),t=n.shift();React.render(React.createElement("div",null,React.createElement(GoogleMap,{positions:n,lat:t.lat,lng:t.lng}),React.createElement("a",{href:"#",onClick:this.handleReturn},"Tillbaka")),document.getElementById("content-container"))},handleTimeIsUp:function(){this.setState({timeIsUp:!0})},handleReachedFinish:function(){var n=this;this.state.master.finish(function(t){console.log(t),n.setState({isFinished:!0})})},getInitialState:function(){var n=this.props.gameMaster.gameRiddles;return{master:this.props.gameMaster,data:gameMaster.gameRiddles,total:n.length}},render:function(){var n,t,i="Snyggt du har klarat alla rebusar!",r={marginLeft:"20px"},u=this.state.data.filter(function(n){return n.isSolved}).length,f=this.state.data.filter(function(n){return n.isCorrect}).length>0,e=this.state.data.every(function(n){return n.isCompleted}),o=e||this.state.timeIsUp;return this.state.master.duration>0&&(this.state.timeIsUp&&(i="Tiden är slut!"),n=React.createElement(CountDownTimer,{duration:this.state.master.duration,started:this.state.master.started,onTimeIsUp:this.handleTimeIsUp})),f&&(t=React.createElement("button",{onClick:this.handleShowMap,className:"btn btn-blue",style:r},React.createElement("span",{className:"icon icon-place"})," Visa karta")),React.createElement("div",null,o?this.state.isFinished?React.createElement("div",null,React.createElement("p",null,"Ditt resultat ",this.state.master.score()," p"),React.createElement("p",null,"För att föreviga ögonblicket får ni gärna ta en lagbild och ladda upp till Instagram med hashtagen #rebusjakt."),React.createElement("a",{className:"btn collapsed waves-button waves-effect","data-toggle":"collapse",href:"#collapsible-correct-hunt"},React.createElement("span",{className:"collapsed-hide"},"Dölj"),React.createElement("span",{className:"collapsed-show"},"Visa rätta svar")),React.createElement("div",{className:"collapsible-region collapse",id:"collapsible-correct-hunt"},React.createElement(CorrectHunt,{gameRiddles:this.state.data})),React.createElement(ReviewForm,null)):React.createElement("div",null,React.createElement("h2",{className:"content-sub-heading"},i),React.createElement("p",null,"Bege dig till målet!"),React.createElement(LocationChecker,{gameRiddle:this.state.master.endGameRiddle,onReturn:this.handleReachedFinish})):React.createElement("div",null,React.createElement("p",null,n,React.createElement("span",{className:"alt-text text-green",style:r},u," av ",this.state.total," rebusar avklarade."),t),React.createElement("hr",null),React.createElement(GameRiddleList,{data:this.state.data,onRiddleOpen:this.handleRiddleOpen,onCollectQuestions:this.handleCollectQuestions,onAnswerQuestions:this.handleAnswerQuestions})))}}),gameMaster=new GameMaster(huntData);React.render(React.createElement(GameApp,{gameMaster:gameMaster}),document.getElementById("game-container"))