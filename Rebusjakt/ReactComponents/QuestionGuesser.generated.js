// @hash v2-18B331708CE0F3FA2C3F7254565E9BB8
// Automatically generated by ReactJS.NET. Do not edit, your changes will be overridden.
// Version: 1.5.2 (build 05eb7cc)
// Generated at: 2015-06-02 15:24:31
///////////////////////////////////////////////////////////////////////////////

var GameQuestion = React.createClass({displayName: "GameQuestion",
	handleHasAnswered : function(isCorrect){
		var gameQuestion = this.props.data;
		gameQuestion.isAnswered = true;
		gameQuestion.isCorrect = isCorrect;
		this.props.onHasAnswered(gameQuestion);
	},
	render: function(){
		var answer = this.props.data.question.Answer;
		var answerForms = {
			"text" : React.createElement(TextGuesser, {answer: answer, maxwrong: 3, onHasAnswered: this.handleHasAnswered}),
			"number" : React.createElement(NumberGuesser, {answer: answer, onHasAnswered: this.handleHasAnswered}),
			"multi" : React.createElement(MultiGuesser, {answer: answer, options: this.props.data.question.AnswerOptions, onHasAnswered: this.handleHasAnswered, s: true}),
			"trueorfalse" : React.createElement(TrueOrFalseGuesser, {answer: answer, onHasAnswered: this.handleHasAnswered})
		};
		return(
			React.createElement("div", null, 
				React.createElement("h2", {className: "content-sub-heading"}, this.props.data.question.Name), 
				React.createElement("p", null, this.props.data.question.Description), 
				answerForms[this.props.data.question.AnswerType]
			)
		);
	}
});

var QuestionGuesser = React.createClass({displayName: "QuestionGuesser",
	componentWillReceiveProps : function(nextProps){
		var gameQuestions = nextProps.gameRiddle.gameQuestions;
        this.setState({ gameQuestions : gameQuestions, riddle: nextProps.gameRiddle.riddle, showQuestion: false });
    },
	getInitialState: function() {
		var gameQuestions = this.props.gameRiddle.gameQuestions;
		return { gameQuestions : gameQuestions, riddle: this.props.gameRiddle.riddle, showQuestion: false };	
	},		
	handleReturn: function(){
		var isFinished = this.state.gameQuestions.every(function(q){ return q.isAnswered; });
		if(isFinished){
			this.props.onCompleted(this.props.gameRiddle);
		}else{
			this.props.onReturn();
		}		
	},
	handleOpenQuestion: function(gameQuestion, event){
		event.preventDefault();
		this.setState({gameQuestion: gameQuestion, showQuestion: true});
	},
	handleHasAnswered: function(gameQuestion){
		this.setState({showQuestion: false});
	},
	render: function(){
		var jsxList, jsxQuestion, finishedMessage;
		var isFinished = this.state.gameQuestions.every(function(q){ return q.isAnswered; });
		
		if(isFinished){
			finishedMessage = (React.createElement("div", null, 
					React.createElement("p", null, "Bra gjort ", React.createElement("span", {dangerouslySetInnerHTML: {__html: emojione.toImage(":thumbsup:")}})), React.createElement("p", null, " Alla frågor besvarade. Du kan återgå till rebuslistan.")
				));
		}
		if(this.state.showQuestion){
			jsxQuestion = React.createElement(GameQuestion, {data: this.state.gameQuestion, onHasAnswered: this.handleHasAnswered});
		}else{
			var nodes = this.state.gameQuestions.map(function(q){
				var actions, cardClass = "card";
				if(q.isAnswered){
					cardClass += q.isCorrect ? " card-green-bg" : " card-red-bg";
				}else{
					actions = React.createElement("a", {href: "#", onClick: this.handleOpenQuestion.bind(this, q)}, React.createElement("span", {className: "text-blue"}, "Svara"));
				}
				return (
					React.createElement("div", {className: "col-lg-3 col-md-4 col-sm-6"}, 
						React.createElement("div", {className: cardClass}, 
							React.createElement("div", {className: "card-main"}, 
								React.createElement("div", {className: "card-inner"}, 
									React.createElement("p", null, q.question.Description)
								), 
								React.createElement("div", {className: "card-action"}, 
									React.createElement("ul", {className: "nav nav-list pull-left"}, 
										React.createElement("li", null, actions)
									)
								)
							)
						)
					)
				);
			}.bind(this));

			jsxList = React.createElement("div", null, 
						React.createElement("h2", {className: "content-sub-heading"}, "Frågor till rebus ", this.state.riddle.Name), 
						React.createElement("div", {className: "card-wrap"}, 
							React.createElement("div", {className: "row"}, 
								nodes
							)
						), 
						React.createElement("p", null, 
							React.createElement("a", {href: "#", onClick: this.handleReturn}, "Återgå till rebuslistan")
						)
					);
		}	
		return(
			React.createElement("div", null, 
			
				React.createElement("div", null, 
					finishedMessage, 
					jsxQuestion, 
					jsxList
				)
			
			)			
		);
	}
});