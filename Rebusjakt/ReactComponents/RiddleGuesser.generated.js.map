{"version":3,"file":null,"sourceRoot":null,"sources":["RiddleGuesser.jsx.source"],"sourcesContent":["\n\n\n\n\n    \r\n\r\n    var RiddleEndGame = React.createClass({\r\n\t\tcompletedGuessing: function(){\r\n\t\t\tthis.props.onSolved(this.props.isWinner);\r\n\t\t},\r\n        render: function(){\r\n            return(\r\n                <div>\r\n                    {\r\n                        this.props.isWinner ? \r\n                        <div>\r\n                            <h2 className=\"content-sub-heading\">Bra där du gissade rätt</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tBege dig till <strong>{this.props.riddle.LocationName}</strong> för att hämta rebusens frågor.\r\n                            </p>                                \r\n\t\t\t\t\t\t\t<a href=\"#\" onClick={this.completedGuessing}>Återgå till rebuslistan</a>\r\n                            <GoogleMap lat={this.props.riddle.Latitude} lng={this.props.riddle.Longitude} />\r\n                        </div> : \r\n                        <div>\r\n                            <h2 className=\"content-sub-heading\">Fel fel fel!</h2>\r\n\t\t\t\t\t\t\t<p dangerouslySetInnerHTML={{__html: emojione.toImage(\":worried:\")}} />\r\n\t\t\t\t\t\t\t<a href=\"#\" onClick={this.completedGuessing}>Återgå till rebuslistan</a>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                );\r\n        }\r\n    });\r\n\r\n\r\n    var RiddleGuesser = React.createClass({\r\n        handleHasAnswered : function(isCorrect) {\r\n            this.setState({ isOver : true, isWinner : isCorrect });\r\n        },\r\n        handleGuess : function(guess){\r\n            //check if wrong guess - and check against no of wrong guesses\r\n            guess = guess.toUpperCase();\r\n            var guessCount = this.state.guesscount;\r\n            guessCount++;\r\n            var guesses = this.state.guesses;\r\n            guesses.push(guess);\r\n            var guessWord = this.state.guessword;\r\n            var answer = this.state.riddle.Answer;\r\n            var wrongcount = this.state.wrongcount;\r\n            if(guess.length > 1){\r\n                if(guess === answer){\r\n                    this.endGuessing(true);\r\n                    return false;\r\n                }else{\r\n                    wrongcount++;\r\n                }\r\n            }else{\r\n                var guessWordChars = guessWord.split('');\r\n                var answerChars = answer.split('');\r\n                var hasHit = false;\r\n                for(var i = 0; i < answer.length; i++){\r\n                    if(answer[i] === guess){\r\n                        guessWordChars[i] = guess;\r\n                        hasHit = true;\r\n                    }                        \r\n                }\r\n                if(!hasHit)\r\n                    wrongcount++;\r\n\r\n                guessWord = guessWordChars.join('');\r\n            }\r\n            if(guessWord === answer){\r\n                this.endGuessing(true);\r\n                return false;\r\n            }\r\n            if(wrongcount >= this.props.maxwrong){\r\n                this.endGuessing(false);\r\n                return false;\r\n            }\r\n            this.setState({guesscount:guessCount, wrongcount: wrongcount, guessword: guessWord, guesses : guesses, isOver : false });\r\n        },\r\n        \r\n\t\thandleSolved: function(isWinner){\r\n\t\t\tvar gameRiddle = this.state.gameRiddle;\r\n\t\t\tgameRiddle.isSolved = true;\r\n\t\t\tgameRiddle.isCorrect = isWinner;\r\n\t\t\tif(!isWinner){\r\n\t\t\t\tgameRiddle.isCompleted = true;\r\n\t\t\t}\r\n\t\t\tthis.props.onSolved(gameRiddle);\r\n\t\t},\r\n\t\thandleReturn: function(){\r\n\t\t\tthis.props.onReturn();\r\n\t\t},\r\n        componentWillReceiveProps : function(nextProps){\r\n\t\t\tvar riddle = nextProps.gameRiddle.riddle;\r\n            this.setState({ gameRiddle: nextProps.gameRiddle, riddle: riddle, isOver: false });\r\n        },\r\n        getInitialState: function() {\r\n\t\t\tvar riddle = this.props.gameRiddle.riddle;\r\n            return { gameRiddle: this.props.gameRiddle, riddle: riddle, isOver : false };\r\n        },\r\n        render: function () { \r\n                \r\n                return (\r\n                    <div>\r\n                        { \r\n                            this.state.isOver ? \r\n                            <RiddleEndGame isWinner={this.state.isWinner} riddle={this.state.riddle} onSolved={this.handleSolved} /> : \r\n                            <div>\r\n\t\t\t\t\t\t\t\t<h2 className=\"content-sub-heading\">Lös rebus</h2>\r\n\t\t\t\t\t\t\t\t<p dangerouslySetInnerHTML={{__html: emojione.toImage(this.state.riddle.Description)}} />\r\n                                <TextGuesser answer={this.state.riddle.Answer} maxwrong={this.props.maxwrong} onHasAnswered={this.handleHasAnswered} />\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t<a href=\"#\" onClick={this.handleReturn}>Återgå till rebuslistan</a>\r\n\t\t\t\t\t\t\t\t</p>\r\n                            </div>\r\n                        }\r\n                        \r\n                    </div>                \r\n                );\r\n        }\r\n    });\r\n   "],"names":[],"mappings":"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"}